// 2023. 12. 11 월										(15주 1일)
//---------------------------------------------------------------------------
// class
// 2023. 12. 11 월(15주 1일) - 한학기 정리, 책 소개
// 2023. 12. 13 수(15주 2일) - 기말시험
// 2023. 12. 18 월 - 성적게시
//---------------------------------------------------------------------------
#include <iostream>
#include <algorithm>
#include "save.h"
#include "STRING.h"

using namespace std;

// C++ 템플릿
// 왜 필요한가? - C++ 언어는 함수 오버로딩이 가능하다. (전달인자의 타입만 다르다면)
//		같은 기능의 함수를 자료형만 바꿔 계속 만들어야 한다. -> 컴퓨터가 대신 하도록
//		-> 템플릿 (소스 코드를 컴파일러가 생성할 수 있는 틀)
// 뭐가 좋은가?
//		소스코드를 생성해 주는 점
// 진짜 좋은 것은 무엇인가?
//		함수를 호출하는 것보다 템플릿으로 만든 함수가 훨씬 빠를 수 있다는 것

//--------
int main()
//--------
{
	int a[]{ 1, 3, 5, 7, 9, 2, 4, 6, 8, 10 };

	// 인자 설명은 수요일
	sort(begin(a), end(a), 호출가능타입(함수, 람다, 함수객체));

	for (int n : a) {
		cout << n << ' ';
	}
	cout << endl;

	save("소스.cpp");
}