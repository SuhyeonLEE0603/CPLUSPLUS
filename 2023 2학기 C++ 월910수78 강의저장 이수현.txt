==================================================
소스.cpp2023-09-11 월요일 오후 5:31:43
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// C++ 입출력 - C++20기준
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
//---------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"

//--------
int main()
//--------
{

	save("소스.cpp");
}


==================================================
소스.cpp2023-09-11 월요일 오후 5:36:08
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// C++ 입출력 - C++20기준
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
//---------------------------------------------------------------------------

#include <iostream>
#include <string>
#include "save.h"
using namespace std;

//--------
int main()				// cin, cout, cerr, clog
//--------
{
	// 화면에 구구단 2단부터 9단까지 출력하세요.
	for (int j = 2; j <= 9; ++j) {
		for (int i = 1; i <= 9; ++i) {
			cout << j << " x " << i << " = " << j * i << '\n';
		}
	}
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-11 월요일 오후 5:44:17
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// C++ 입출력 - C++20기준
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
//---------------------------------------------------------------------------

#include <iostream>
#include <format>		// C++20 출력문을 정렬
#include "save.h"
using namespace std;

//--------
int main()				// cin, cout, cerr, clog
//--------
{
	// 화면에 구구단 2단부터 9단까지 출력하세요.
	// Coding convention
	for (int j = 2; j <= 9; ++j) {
		for (int i = 1; i <= 9; ++i) {
			cout << j << " x " << i << " = " << 
				format("{:2d}",j * i) << endl;	// format에서 출력하는 데이터를 {}로 표현(%d랑 같음) 그리고 형식지정은 콜론(:)으로 함
		}										// < : 왼쪽정렬, > : 오른쪽 정렬, ^ : 가운데 정렬
		cout << endl;
	}
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-11 월요일 오후 5:51:21
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// C++ 입출력 - C++20기준
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

//--------
int main()				// cin, cout, cerr, clog
//--------
{
	// [문제] int 값 2를 입력받아 합계를 출력하라
	int a, b;

	cout << "두 수의 합 구하기" << endl;
	cout << "a를 입력하세요" << endl;
	cin >> a;
	cout << "b를 입력하세요" << endl;
	cin >> b;

	int result = a + b;
	cout << "합계: " << result << endl;

	save("소스.cpp");
}


==================================================
소스.cpp2023-09-11 월요일 오후 6:26:07
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
// 과제 - 다른 자료형에 대하여 오늘 강의한 내용을 반복
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	// 이렇게 하면 안되는 이유를 알고 쓰자.

//--------
int main()				// cin, cout, cerr, clog
//--------
{
	int n;	// 여기서 int 는 최소 단위로 사용되는 token
	// #    include      <     iostream       > 을 사용해도 문제 없는 것처럼 토큰으로 이루어짐
	
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-11 월요일 오후 6:28:15
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
// 과제 - 다른 자료형에 대하여 오늘 강의한 내용을 반복
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	// 이렇게 하면 안되는 이유를 알고 쓰자.

//--------
int main()				// cin, cout, cerr, clog
//--------
{
	int n;	// int 만큼 메모리를 주세요. 나는 n이라는 이름으로 access
	
	cout << "n의 크기는 - " << sizeof(n) << endl;
	cout << "n의 주소는 - " << addressof(n) << endl;
	cout << "n의 자료형은 - " << typeid(n).name() << endl;

	// int 의 크기는 C++표준에 따르면 적어도 2바이트 

	save("소스.cpp");
}



==================================================
소스.cpp2023-09-11 월요일 오후 6:45:56
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
// 과제 - 다른 자료형에 대하여 오늘 강의한 내용을 반복
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	// 이렇게 하면 안되는 이유를 알고 쓰자.

//--------
int main()				// cin, cout, cerr, clog
//--------
{
	int n = 0B01111111'11111111'11111111'11111111;

	// [문제] n의 최댓값을 출력하라
	
	cout << n << endl;

	n = n + 1;
	// [문제] n의 최솟값을 출력하라

	cout << n << endl;

	save("소스.cpp");
}


==================================================
소스.cpp2023-09-11 월요일 오후 6:56:30
==================================================
// 2023. 9. 11 월										(2주 1일)
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------
// 과제 C++ I/O 관련 내용 읽어보기
// 과제 - 다른 자료형에 대하여 오늘 강의한 내용을 반복
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	

//--------
int main()				
//--------
{

	cout << numeric_limits<long long int>::max() << endl;

	save("소스.cpp");
}


==================================================
소스.cpp2023-09-13 수요일 오후 4:10:40
==================================================
// 2023. 9. 13 수										(2주 2일)
// 다음 주 수요일 9/20 - 전시로 수업(3주 2일)을 대체 함
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	

//--------
int main()				
//--------
{
	int n[10];

	// [문제] n에는 int 값 10개가 있다. 화면에 출력하라
	for (int i = 0; i < 10; ++i) {
		cout << "n[" << i << "] 의 값 - " << n[i] << endl;
	}
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-13 수요일 오후 4:21:54
==================================================
// 2023. 9. 13 수										(2주 2일)
// 다음 주 수요일 9/20 - 전시로 수업(3주 2일)을 대체 함
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	

//--------
int main()				
//--------
{
	int n[10];

	// [문제] n에는 int 값 10개가 있다. 화면에 출력하라
	for (int num : n) {			// range-based for, range for loop
		cout << num << endl;
	}
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-13 수요일 오후 4:24:56
==================================================
// 2023. 9. 13 수										(2주 2일)
// 다음 주 수요일 9/20 - 전시로 수업(3주 2일)을 대체 함
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	

//--------
int main()				
//--------
{
	int n[10]{};		// 전체를 0으로 초기화 uniform initialization

	// [문제] n에는 int 값 10개가 있다. 화면에 출력하라
	for (int num : n) {			// range-based for, range for loop
		cout << num << endl;
	}
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-13 수요일 오후 4:41:24
==================================================
// 2023. 9. 13 수										(2주 2일)
// 다음 주 수요일 9/20 - 전시로 수업(3주 2일)을 대체 함
//---------------------------------------------------------------------------
// int n;
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;	

//--------
int main()				
//--------
{
	int n = 1234;		// initialization
	n = 1234;			// 대입, 할당, 배정 - assignment

	save("소스.cpp");
}


==================================================
소스.cpp2023-09-13 수요일 오후 5:06:40
==================================================
// 2023. 9. 13 수										(2주 2일)
// 다음 주 수요일 9/20 - 전시로 수업(3주 2일)을 대체 함
//---------------------------------------------------------------------------
// 랜덤 엔진과 분포
//---------------------------------------------------------------------------

#include <iostream>
#include <random>			// 랜덤값과 분포를 사용하려면
#include <format>
#include <algorithm>
#include "save.h"
using namespace std;	

default_random_engine dre;				// 랜덤값을 생성하는 엔진
uniform_int_distribution uid{1, 999};

//--------
int main()				
//--------
{
	int numbers[100];

	for (int i = 0; i < 100; ++i) {
		numbers[i] = uid(dre);
	}

	for (int num : numbers) {
		cout << format("{:4d}", num);
	}
	cout << endl;

	int max = numeric_limits<int>::min();
	// [문제] 제일 큰 값을 찾아 화면에 입력하시오
	for (int num : numbers) {
		if (num > max) {
			max = num;
		}
	}
	cout << "제일 큰 값 - " << max << endl;
	
	save("소스.cpp");
}


==================================================
소스.cpp2023-09-18 월요일 오후 6:52:09
==================================================
// 2023. 9. 18 월										(3주 1일)
// 이번 주 수요일 9/20 - 전시로 수업(3주 2일)을 대체 함
//---------------------------------------------------------------------------
// 많은 수의 int가 있다 - 어떻게 저장할건가? 어떤 작업을 하고 싶나?
//---------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include "save.h"
using namespace std;

default_random_engine dre;
uniform_int_distribution uid{ 1, 6 };

// [문제] 주사위를 1'0000 번 던졌다. 각 숫자의 출현 횟수와 확률을 출력하라
// 1 - 1670번, 확률 - 16.7%
// ...


//--------
int main()
//--------
{
	int nums[6]{};

	for (int i = 0; i < 1'0000; ++i) {
		nums[uid(dre) - 1]++;
	}

	for (int k = 0; k < 6; ++k) {
		cout << k + 1 << " - " << nums[k] << "번, 확률 - " << format("{:2.1f}", nums[k] / 100.0) << "%" << endl;
	}

	save("소스.cpp");
}


==================================================
소스.cpp2023-09-25 월요일 오후 6:17:10
==================================================
// 2023. 9. 25 월										(4주 1일)
// 10월 2일 (5주 1일) - 동영상 강의
// 10월 25일(6주 2일) - 중간시험
//---------------------------------------------------------------------------
// 변수와 메모리 - 전역변수, 지역변수, 동적할당 변수
//---------------------------------------------------------------------------

#include <iostream>
#include "save.h"
using namespace std;

//--------
int main()
//--------
{
	const int NUM = 25'0000;
	int num[NUM];				// 1MB = 1024KB = 1024 * 1024B

	cout << num[NUM- 1] << endl;
	cout << addressof(num[NUM - 1]) << endl;

	// 오류가 나는 이유 : STACK 오버플로우가 발생하기 때문(STACK의 최대 크기 1MB)
	// STACK의 구조 : LIFO
	// STACK은 함수의 인자를 전달해줌, 함수 호출시 cpu 현 상태를 저장함 
	//								  -> main 함수를 돌다가 다른 함수를 호출할 때 다른 함수 호출 전까지의 main 함수의 상태를 STACK에 저장함 

	save("소스.cpp");
}

==================================================
소스.cpp2023-09-25 월요일 오후 6:55:13
==================================================
// 2023. 9. 25 월										(4주 1일)
// 10월 2일 (5주 1일) - 동영상 강의
// 10월 25일(6주 2일) - 중간시험
//---------------------------------------------------------------------------
// 변수와 메모리 - 전역변수, 지역변수, 동적할당 변수
//---------------------------------------------------------------------------
#include <iostream>
#include "save.h"
using namespace std;

int n;				// DATA - global variable

//--------
int main()
//--------
{
	int n;			// STACK - local variable
					// DATA, STACK은 n이란 이름으로 주소값에 엑세스하여 그 안의 값을 다룸

	new int;		// FREE Store - dynamically allocated variable -> DATA와 STACK이랑 다르게 주소값만 가지고 다룸
	// -> system(Operating system)에 요청
	save("소스.cpp");
}

==================================================
소스.cpp2023-09-25 월요일 오후 7:02:04
==================================================
// 2023. 9. 25 월										(4주 1일)
// 10월 2일 (5주 1일) - 동영상 강의
// 10월 25일(6주 2일) - 중간시험
//---------------------------------------------------------------------------
// 변수와 메모리 - 전역변수, 지역변수, 동적할당 변수
//---------------------------------------------------------------------------
#include <iostream>
#include "save.h"
using namespace std;

int gn[10];

//--------
int main()
//--------
{
	int n[10];

	int* p = new int[10];

	// 각 int는 살고 있는 곳이 다르다

	cout << addressof(n) << endl;
	cout << addressof(gn) << endl;
	cout << p << endl;

	// STACK : n, p
	// DATA : n
	// Free Store : new int

	save("소스.cpp");
}